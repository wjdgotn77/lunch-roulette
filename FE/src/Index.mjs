// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as React from "react";
import * as $$Promise from "@ryyppy/rescript-promise/src/Promise.mjs";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import $$Image from "next/image";
import * as Caml_exceptions from "rescript/lib/es6/caml_exceptions.js";
import MainHeaderImgSvg from "../public/MainHeaderImg.svg";
import MainBottomBtnImgPng from "../public/MainBottomBtnImg.png";

var mainHeaderImg = MainHeaderImgSvg;

var mainBottomBtnImg = MainBottomBtnImgPng;

var $$Response = {};

function getTest(param) {
  return $$Promise.$$catch(globalThis.fetch("https://reqres.in/api/products").then(function (res) {
                    return res.json();
                  }).then(function (data) {
                  var data$1 = data.data;
                  var ret = (data$1 == null) ? [] : data$1;
                  return Promise.resolve({
                              TAG: /* Ok */0,
                              _0: ret
                            });
                }), (function (e) {
                var msg;
                if (e.RE_EXN_ID === $$Promise.JsError) {
                  var msg$1 = e._1.message;
                  msg = msg$1 !== undefined ? msg$1 : "";
                } else {
                  msg = "Unexpected error occurred";
                }
                return Promise.resolve({
                            TAG: /* Error */1,
                            _0: msg
                          });
              }));
}

var Test = {
  getTest: getTest
};

var FailedRequest = /* @__PURE__ */Caml_exceptions.create("Index.FailedRequest");

$$Promise.$$catch(getTest(undefined).then(function (result) {
          var tmp;
          if (result.TAG === /* Ok */0) {
            tmp = Belt_Array.forEach(result._0, (function (p) {
                    console.log("" + String(p.id) + ", " + p.name + ", " + p.year + ", " + p.color + " ");
                  }));
          } else {
            console.log("Could not query products: " + result._0);
            tmp = undefined;
          }
          return Promise.resolve(tmp);
        }), (function (e) {
        if (e.RE_EXN_ID === FailedRequest) {
          console.log("Operation failed! " + e._1);
        } else {
          console.log("Unknown error");
        }
        return Promise.resolve(undefined);
      }));

var initialState = {
  place: "",
  category: ""
};

function reducer(state, action) {
  if (action.TAG === /* UpdatePlaceValue */0) {
    return {
            place: action._0,
            category: state.category
          };
  } else {
    return {
            place: state.place,
            category: action._0
          };
  }
}

function Index$default(Props) {
  var match = React.useReducer(reducer, initialState);
  var dispatch = match[1];
  var state = match[0];
  var handleChange = function (e) {
    var newValue = e.target.value;
    var name = e.target.name;
    if (name === "place") {
      return Curry._1(dispatch, {
                  TAG: /* UpdatePlaceValue */0,
                  _0: newValue
                });
    } else {
      return Curry._1(dispatch, {
                  TAG: /* UpdateCategoryValue */1,
                  _0: newValue
                });
    }
  };
  var handleSubmit = function (e) {
    e.preventDefault();
    console.log(state);
  };
  return React.createElement("div", {
              className: "bg-primary h-screen flex flex-col justify-center items-center"
            }, React.createElement($$Image, {
                  alt: "main header img",
                  height: 255,
                  src: mainHeaderImg,
                  width: 276
                }), React.createElement("div", {
                  className: "flex justify-center"
                }, React.createElement("form", {
                      className: "flex flex-col w-64",
                      onSubmit: handleSubmit
                    }, React.createElement("label", {
                          className: "text-base pb-1"
                        }, "어디서 드시나요"), React.createElement("select", {
                          className: "mb-8 h-12 rounded-md pl-2.5",
                          name: "place",
                          required: true,
                          value: state.place,
                          onChange: handleChange
                        }, React.createElement("option", {
                              value: ""
                            }, "장소 선택하기"), React.createElement("option", {
                              value: "배달"
                            }, "배달"), React.createElement("option", {
                              value: "외식"
                            }, "외식")), React.createElement("label", {
                          className: "text-base pb-1"
                        }, "음식분류"), React.createElement("select", {
                          className: "mb-8 h-12 rounded-md pl-2.5",
                          name: "category",
                          required: true,
                          value: state.category,
                          onChange: handleChange
                        }, React.createElement("option", {
                              value: ""
                            }, "음식종류 선택하기"), React.createElement("option", {
                              value: "한식"
                            }, "한식"), React.createElement("option", {
                              value: "중식"
                            }, "중식"), React.createElement("option", {
                              value: "일식"
                            }, "일식"), React.createElement("option", {
                              value: "양식"
                            }, "양식"), React.createElement("option", {
                              value: "샐러드"
                            }, "샐러드")), React.createElement("div", undefined), React.createElement("button", {
                          className: "flex justify-center",
                          type: "submit"
                        }, React.createElement($$Image, {
                              alt: "main button",
                              height: 219,
                              src: mainBottomBtnImg,
                              width: 219
                            })))));
}

var $$default = Index$default;

export {
  mainHeaderImg ,
  mainBottomBtnImg ,
  $$Response ,
  Test ,
  FailedRequest ,
  initialState ,
  reducer ,
  $$default ,
  $$default as default,
}
/* mainHeaderImg Not a pure module */
